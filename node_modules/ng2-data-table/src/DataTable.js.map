{"version":3,"file":"DataTable.js","sourceRoot":"","sources":["../../src/DataTable.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, Input, Output, EventEmitter, SimpleChange, DoCheck, OnInit, OnChanges } from \"@angular/core\";\r\nimport * as _ from \"lodash\";\r\nimport { StateManager } from \"./StateManager\";\r\n\r\nexport interface SortEvent {\r\n    sortBy: string;\r\n    sortOrder: string\r\n}\r\n\r\nexport interface PageEvent {\r\n    activePage: number;\r\n    rowsOnPage: number;\r\n    dataLength: number;\r\n}\r\n\r\nexport interface DataEvent {\r\n    length: number;\r\n}\r\n\r\nexport interface SelectEvent {\r\n\r\n}\r\n\r\n@Directive({\r\n    selector: 'table[mfData]',\r\n    exportAs: 'mfDataTable'\r\n})\r\nexport class DataTable implements OnInit, DoCheck, OnChanges {\r\n\r\n    @Input(\"mfData\") public inputData: any[] = [];\r\n    private inputDataLength: number;\r\n\r\n    private sortBy = \"\";\r\n    private sortOrder = \"asc\";\r\n\r\n    @Input(\"mfRowsOnPage\") public rowsOnPage = 1000;\r\n    @Input(\"mfSaveRowsOnPage\") public saveRowsOnPage = false;\r\n    @Input(\"mfActivePage\") public activePage = 1;\r\n\r\n    @Output(\"mfSelectedEntities\") public selectedEntitiesEmitter = new EventEmitter();\r\n    public selectedEntities: any[] = [];\r\n\r\n    private mustRecalculateData = false;\r\n\r\n    public data: any[];\r\n\r\n    public onDataChange = new EventEmitter<DataEvent>();\r\n    public onSortChange = new EventEmitter<SortEvent>();\r\n    public onPageChange = new EventEmitter<PageEvent>();\r\n    public onSelectChange = new EventEmitter<SelectEvent>();\r\n\r\n    constructor(private stateManager: StateManager) { }\r\n\r\n    public addRemoveSelectedEntity($event: any) {\r\n        this.onSelectChange.emit({});\r\n        this.updateSelectedEntities();\r\n        this.selectedEntitiesEmitter.emit(this.selectedEntities);\r\n    }\r\n\r\n    public updateSelectedEntities() {\r\n        this.selectedEntities = this.inputData.filter(x => x.__isSelected__);\r\n    }\r\n\r\n    public selectAllRows() {\r\n        this.inputData.forEach((data) => {\r\n            if (data.hasOwnProperty('mfIsSelectable') == false\r\n                || data.hasOwnProperty('mfIsSelectable') && data.mfIsSelectable) {\r\n                data.__isSelected__ = true;\r\n            }\r\n        })\r\n        this.updateSelectedEntities();\r\n        this.selectedEntitiesEmitter.emit(this.selectedEntities);\r\n    }\r\n\r\n    public deselectAllRows() {\r\n        this.inputData.forEach((data) => {\r\n            data.__isSelected__ = false;\r\n        })\r\n        this.updateSelectedEntities();\r\n        this.selectedEntitiesEmitter.emit(this.selectedEntities);\r\n    }\r\n\r\n    public getSort(): SortEvent {\r\n        return { sortBy: this.sortBy, sortOrder: this.sortOrder };\r\n    }\r\n\r\n    public setSort(sortBy: string, sortOrder: string): void {\r\n        if (this.sortBy !== sortBy || this.sortOrder !== sortOrder) {\r\n            this.sortBy = sortBy;\r\n            this.sortOrder = sortOrder;\r\n            this.mustRecalculateData = true;\r\n            this.onSortChange.emit({ sortBy: sortBy, sortOrder: sortOrder });\r\n        }\r\n    }\r\n\r\n    public getPage(): PageEvent {\r\n        return { activePage: this.activePage, rowsOnPage: this.rowsOnPage, dataLength: this.inputData.length };\r\n    }\r\n\r\n    public setPage(activePage: number, rowsOnPage: number): void {\r\n        if (this.rowsOnPage !== rowsOnPage || this.activePage !== activePage) {\r\n            this.activePage = this.activePage !== activePage ? activePage : this.calculateNewActivePage(this.rowsOnPage, rowsOnPage);\r\n            if (this.saveRowsOnPage && (this.rowsOnPage != rowsOnPage)) {\r\n                this.stateManager.setPagination(rowsOnPage.toString());\r\n            }            \r\n            this.rowsOnPage = rowsOnPage;\r\n            this.mustRecalculateData = true;\r\n            this.onPageChange.emit({ activePage: this.activePage, rowsOnPage: this.rowsOnPage, dataLength: this.inputData.length });\r\n        }\r\n    }\r\n\r\n    private calculateNewActivePage(previousRowsOnPage: number, currentRowsOnPage: number): number {\r\n        let firstRowOnPage = (this.activePage - 1) * previousRowsOnPage + 1;\r\n        let newActivePage = Math.ceil(firstRowOnPage / currentRowsOnPage);\r\n        return newActivePage;\r\n    }\r\n\r\n    public ngOnInit() {\r\n        this.inputDataLength = this.inputData.length;\r\n        if (this.saveRowsOnPage) {\r\n            let rowsOnPage = this.stateManager.getPagination(this.rowsOnPage);\r\n            this.setPage(1, rowsOnPage);\r\n        }\r\n    }\r\n\r\n    public ngOnChanges(changes: { [key: string]: SimpleChange }): any {\r\n        if (changes[\"inputData\"]) {\r\n            this.mustRecalculateData = true;\r\n            this.ngDoCheck();\r\n        }\r\n    }\r\n\r\n    private addIsSelectedProperty() {\r\n        this.inputData.forEach(x => {\r\n            if (x.__isSelected__ == null) {\r\n                Object.defineProperty(x, \"__isSelected__\", { value: false, writable: true })\r\n            }\r\n        });\r\n    }\r\n\r\n    public ngDoCheck(): any {\r\n        if (this.mustRecalculateData\r\n            || this.isInputDataChanged() ) {\r\n            this.addIsSelectedProperty();\r\n            this.inputData = this.inputData || [];\r\n            this.onPageChange.emit({\r\n                activePage: this.activePage,\r\n                rowsOnPage: this.rowsOnPage,\r\n                dataLength: this.inputData.length\r\n            });\r\n            this.onDataChange.emit({\r\n                length: this.inputData.length\r\n            });\r\n            this.fillData();\r\n            this.mustRecalculateData = false;\r\n        }\r\n    }\r\n\r\n    private isInputDataChanged(): boolean {\r\n        let isDataLengthChanged = this.inputDataLength != this.inputData.length;\r\n        this.inputDataLength = this.inputData.length;\r\n\r\n        return isDataLengthChanged;\r\n    }\r\n\r\n    private fillData(): void {\r\n        this.activePage = this.activePage;\r\n        this.rowsOnPage = this.rowsOnPage;\r\n\r\n        let offset = (this.activePage - 1) * this.rowsOnPage;\r\n        let data = this.inputData;\r\n        data = _.orderBy(data, (row)=>{\r\n            var value = row[this.sortBy];\r\n            if(value && typeof value === 'string' || value instanceof String) {\r\n                return value.toLowerCase();\r\n            }\r\n            return value;\r\n        }, [this.sortOrder]);\r\n        data = _.slice(data, offset, offset + this.rowsOnPage);\r\n        this.data = data;\r\n    }\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}