{"version":3,"file":"DefaultSorter.js","sourceRoot":"","sources":["../../src/DefaultSorter.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACjD,OAAO,EAAE,SAAS,EAAa,MAAM,aAAa,CAAC;AAkBnD;IAWI,uBAA2B,OAAkB;QAA7C,iBAKC;QAL0B,YAAO,GAAP,OAAO,CAAW;QAPP,uBAAkB,GAAG,KAAK,CAAC;QAC1B,wBAAmB,GAAG,EAAE,CAAC;QAClC,eAAU,GAAG,EAAE,CAAC;QAE9C,oBAAe,GAAY,KAAK,CAAC;QACjC,qBAAgB,GAAY,KAAK,CAAC;QAG9B,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAgB;YAC5C,KAAI,CAAC,eAAe,GAAG,CAAC,KAAK,CAAC,MAAM,KAAK,KAAI,CAAC,MAAM,IAAI,KAAK,CAAC,SAAS,KAAK,KAAK,CAAC,CAAC;YACnF,KAAI,CAAC,gBAAgB,GAAG,CAAC,KAAK,CAAC,MAAM,KAAK,KAAI,CAAC,MAAM,IAAI,KAAK,CAAC,SAAS,KAAK,MAAM,CAAC,CAAC;QACzF,CAAC,CAAC,CAAA;IACN,CAAC;IAED,4BAAI,GAAJ;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC9C,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC7C,CAAC;IACL,CAAC;IAvBY;QAAZ,KAAK,CAAC,IAAI,CAAC;;iDAAgB;IAGG;QAA9B,KAAK,CAAC,sBAAsB,CAAC;;6DAAmC;IACjC;QAA/B,KAAK,CAAC,uBAAuB,CAAC;;8DAAiC;IACzC;QAAtB,KAAK,CAAC,cAAc,CAAC;;qDAAwB;IANrC,aAAa;QAhBzB,SAAS,CAAC;YACP,QAAQ,EAAE,iBAAiB;YAC3B,QAAQ,EAAE,wjCAYD;SACZ,CAAC;yCAYsC,SAAS;OAXpC,aAAa,CAyBzB;IAAD,oBAAC;CAAA,AAzBD,IAyBC;SAzBY,aAAa","sourcesContent":["import { Component, Input } from \"@angular/core\";\r\nimport { DataTable, SortEvent } from \"./DataTable\";\r\n\r\n@Component({\r\n    selector: \"mfDefaultSorter\",\r\n    template: `\r\n        <a style=\"cursor: pointer\" (click)=\"sort()\" class=\"text-nowrap\" [ngClass]=\"styleClass\">\r\n            <ng-content></ng-content>\r\n            <span *ngIf=\"!showSortableArrows\">\r\n                <span *ngIf=\"isSortedByMeAsc\" class=\"glyphicon glyphicon-triangle-top\" aria-hidden=\"true\" [ngClass]=\"sortArrowStyleClass\"></span>\r\n                <span *ngIf=\"isSortedByMeDesc\" class=\"glyphicon glyphicon-triangle-bottom\" aria-hidden=\"true\" [ngClass]=\"sortArrowStyleClass\"></span>\r\n            </span>\r\n            <span *ngIf=\"showSortableArrows\">\r\n                <span *ngIf=\"isSortedByMeAsc\" class=\"fa fa-fw fa-sort fa-sort-asc\" aria-hidden=\"true\" [ngClass]=\"sortArrowStyleClass\"></span>\r\n                <span *ngIf=\"isSortedByMeDesc\" class=\"fa fa-fw fa-sort fa-sort-desc\" aria-hidden=\"true\" [ngClass]=\"sortArrowStyleClass\"></span>\r\n                <span *ngIf=\"!isSortedByMeDesc && !isSortedByMeAsc\" class=\"fa fa-fw fa-sort\" aria-hidden=\"true\" [ngClass]=\"sortArrowStyleClass\"></span>\r\n            </span>\r\n        </a>`\r\n})\r\nexport class DefaultSorter {\r\n    @Input(\"by\") sortBy: string;\r\n\r\n    // Optional inputs\r\n    @Input(\"mfShowSortableArrows\") public showSortableArrows = false;\r\n    @Input(\"mfSortArrowStyleClass\") public sortArrowStyleClass = '';\r\n    @Input(\"mfStyleClass\") public styleClass = '';\r\n\r\n    isSortedByMeAsc: boolean = false;\r\n    isSortedByMeDesc: boolean = false;\r\n\r\n    public constructor(private mfTable: DataTable) {\r\n        mfTable.onSortChange.subscribe((event: SortEvent) => {\r\n            this.isSortedByMeAsc = (event.sortBy === this.sortBy && event.sortOrder === \"asc\");\r\n            this.isSortedByMeDesc = (event.sortBy === this.sortBy && event.sortOrder === \"desc\");\r\n        })\r\n    }\r\n\r\n    sort() {\r\n        if (this.isSortedByMeAsc) {\r\n            this.mfTable.setSort(this.sortBy, \"desc\");\r\n        } else {\r\n            this.mfTable.setSort(this.sortBy, \"asc\");\r\n        }\r\n    }\r\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}